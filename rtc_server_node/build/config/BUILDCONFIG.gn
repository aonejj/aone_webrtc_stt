# Copyright (c) 2024 The AONE SFU project authors.

# =====================================
# PLATFORM SELECTION
# =====================================

if(target_os == "") {
  target_os = host_os
}
if (target_cpu == "") {
  target_cpu = host_cpu
}
if (current_cpu == "") {
  current_cpu = target_cpu
}
if (current_os == "") {
  current_os = target_os
}

# =============================================================================
# BUILD FLAGS
# =============================================================================

declare_args() {
  is_official_build = false
  is_clang = true
  host_toolchain = ""
}

declare_args() {
  is_debug = !is_official_build
}

assert(!(is_debug && is_official_build), "Can't do official debug builds")

# ==============================================================================
# TOOLCHAIN SETUP
# =============================================================================
if(host_toolchain == "") {
  if(host_os == "linux") {
    if (target_os != "linux") {
      host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
    } else if (is_clang) {
      host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
    } else {
      host_toolchain = "//build/toolchain/linux:$host_cpu"
    }
  } else {
    assert(false, "Unsupported host_os: $host_os")
  }
}

_default_toolchain = ""

if (target_os == "linux") {
  if (is_clang) {
    _default_toolchain = "//build/toolchain/linux:clang_$target_cpu"
  } else {
    _default_toolchain = "//build/toolchain/linux:$target_cpu"
  }
} else {
  assert(false, "Unsupported target_os: $target_os")
}

set_default_toolchain(_default_toolchain)

is_linux = current_os == "linux"

# Holds all configs used for running the compiler.
default_compiler_configs = [
  "//build/config:feature_flags",
  "//build/config/compiler:compiler",
  "//build/config/compiler:default_optimization",
  "//build/config/compiler:no_exceptions",
  "//build/config/compiler:no_rtti",
]

# Debug/release-related defines.
if(is_debug) {
  default_compiler_configs += [ "//build/config:debug" ]
} else {
  default_compiler_configs += [ "//build/config:release" ]
}  

# Static libraries and source sets use only the compiler ones.
set_defaults("static_library") {
  configs = default_compiler_configs
}
set_defaults("source_set") {
  configs = default_compiler_configs
}

# Executable defaults.
default_executable_configs = default_compiler_configs + [
                               "//build/config:default_libs",
                               ]

set_defaults("executable") {
  configs = default_executable_configs
}

default_shared_library_configs = default_compiler_configs + [
                                   "//build/config:default_libs",
                                   ]
                                   
set_defaults("shared_library") {
  configs = default_shared_library_configs
}

default_static_library_configs = default_compiler_configs + [
                                   "//build/config:default_libs",
                                   ]
                                   
set_defaults("static_library") {
  configs = default_static_library_configs
}